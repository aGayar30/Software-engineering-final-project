"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Validator_1 = global[Symbol.for('ioc.use')]("Adonis/Core/Validator");
class SessionCreateValidator {
    constructor(ctx) {
        this.ctx = ctx;
        this.schema = Validator_1.schema.create({
            from: Validator_1.schema.date(),
            to: Validator_1.schema.date(),
            type: Validator_1.schema.enum(['online-meeting', 'face-to-face', 'chat']),
            studentId: Validator_1.schema.number(),
            specialistId: Validator_1.schema.number(),
        });
        this.messages = {};
    }
}
exports.default = SessionCreateValidator;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2Vzc2lvbkNyZWF0ZVZhbGlkYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlNlc3Npb25DcmVhdGVWYWxpZGF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyRUFBbUQ7QUFHbkQsTUFBcUIsc0JBQXNCO0lBQ3pDLFlBQXVCLEdBQXlCO1FBQXpCLFFBQUcsR0FBSCxHQUFHLENBQXNCO1FBc0J6QyxXQUFNLEdBQUcsa0JBQU0sQ0FBQyxNQUFNLENBQUM7WUFDMUIsSUFBSSxFQUFFLGtCQUFNLENBQUMsSUFBSSxFQUFFO1lBQ25CLEVBQUUsRUFBRSxrQkFBTSxDQUFDLElBQUksRUFBRTtZQUNqQixJQUFJLEVBQUUsa0JBQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxnQkFBZ0IsRUFBRSxjQUFjLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFDN0QsU0FBUyxFQUFFLGtCQUFNLENBQUMsTUFBTSxFQUFFO1lBQzFCLFlBQVksRUFBRSxrQkFBTSxDQUFDLE1BQU0sRUFBRTtTQUNoQyxDQUFDLENBQUE7UUFhSyxhQUFRLEdBQUcsRUFBRSxDQUFBO0lBeENwQixDQUFDO0NBeUNGO0FBM0NELHlDQTJDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNjaGVtYSB9IGZyb20gJ0Bpb2M6QWRvbmlzL0NvcmUvVmFsaWRhdG9yJ1xyXG5pbXBvcnQgeyBIdHRwQ29udGV4dENvbnRyYWN0IH0gZnJvbSAnQGlvYzpBZG9uaXMvQ29yZS9IdHRwQ29udGV4dCdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlc3Npb25DcmVhdGVWYWxpZGF0b3Ige1xyXG4gIGNvbnN0cnVjdG9yIChwcm90ZWN0ZWQgY3R4PzogSHR0cENvbnRleHRDb250cmFjdCkge1xyXG4gIH1cclxuXHJcblx0LypcclxuXHQgKiBEZWZpbmUgc2NoZW1hIHRvIHZhbGlkYXRlIHRoZSBcInNoYXBlXCIsIFwidHlwZVwiLCBcImZvcm1hdHRpbmdcIiBhbmQgXCJpbnRlZ3JpdHlcIiBvZiBkYXRhLlxyXG5cdCAqXHJcblx0ICogRm9yIGV4YW1wbGU6XHJcblx0ICogMS4gVGhlIHVzZXJuYW1lIG11c3QgYmUgb2YgZGF0YSB0eXBlIHN0cmluZy4gQnV0IHRoZW4gYWxzbywgaXQgc2hvdWxkXHJcblx0ICogICAgbm90IGNvbnRhaW4gc3BlY2lhbCBjaGFyYWN0ZXJzIG9yIG51bWJlcnMuXHJcblx0ICogICAgYGBgXHJcblx0ICogICAgIHNjaGVtYS5zdHJpbmcoe30sIFsgcnVsZXMuYWxwaGEoKSBdKVxyXG5cdCAqICAgIGBgYFxyXG5cdCAqXHJcblx0ICogMi4gVGhlIGVtYWlsIG11c3QgYmUgb2YgZGF0YSB0eXBlIHN0cmluZywgZm9ybWF0dGVkIGFzIGEgdmFsaWRcclxuXHQgKiAgICBlbWFpbC4gQnV0IGFsc28sIG5vdCB1c2VkIGJ5IGFueSBvdGhlciB1c2VyLlxyXG5cdCAqICAgIGBgYFxyXG5cdCAqICAgICBzY2hlbWEuc3RyaW5nKHt9LCBbXHJcblx0ICogICAgICAgcnVsZXMuZW1haWwoKSxcclxuXHQgKiAgICAgICBydWxlcy51bmlxdWUoeyB0YWJsZTogJ3VzZXJzJywgY29sdW1uOiAnZW1haWwnIH0pLFxyXG5cdCAqICAgICBdKVxyXG5cdCAqICAgIGBgYFxyXG5cdCAqL1xyXG4gIHB1YmxpYyBzY2hlbWEgPSBzY2hlbWEuY3JlYXRlKHtcclxuICAgICAgZnJvbTogc2NoZW1hLmRhdGUoKSxcclxuICAgICAgdG86IHNjaGVtYS5kYXRlKCksXHJcbiAgICAgIHR5cGU6IHNjaGVtYS5lbnVtKFsnb25saW5lLW1lZXRpbmcnLCAnZmFjZS10by1mYWNlJywgJ2NoYXQnXSksXHJcbiAgICAgIHN0dWRlbnRJZDogc2NoZW1hLm51bWJlcigpLFxyXG4gICAgICBzcGVjaWFsaXN0SWQ6IHNjaGVtYS5udW1iZXIoKSxcclxuICB9KVxyXG5cclxuXHQvKipcclxuXHQgKiBDdXN0b20gbWVzc2FnZXMgZm9yIHZhbGlkYXRpb24gZmFpbHVyZXMuIFlvdSBjYW4gbWFrZSB1c2Ugb2YgZG90IG5vdGF0aW9uIGAoLilgXHJcblx0ICogZm9yIHRhcmdldGluZyBuZXN0ZWQgZmllbGRzIGFuZCBhcnJheSBleHByZXNzaW9ucyBgKCopYCBmb3IgdGFyZ2V0aW5nIGFsbFxyXG5cdCAqIGNoaWxkcmVuIG9mIGFuIGFycmF5LiBGb3IgZXhhbXBsZTpcclxuXHQgKlxyXG5cdCAqIHtcclxuXHQgKiAgICdwcm9maWxlLnVzZXJuYW1lLnJlcXVpcmVkJzogJ1VzZXJuYW1lIGlzIHJlcXVpcmVkJyxcclxuXHQgKiAgICdzY29yZXMuKi5udW1iZXInOiAnRGVmaW5lIHNjb3JlcyBhcyB2YWxpZCBudW1iZXJzJ1xyXG5cdCAqIH1cclxuXHQgKlxyXG5cdCAqL1xyXG4gIHB1YmxpYyBtZXNzYWdlcyA9IHt9XHJcbn1cclxuIl19