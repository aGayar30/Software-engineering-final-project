"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
const luxon_1 = require("luxon");
const Orm_1 = global[Symbol.for('ioc.use')]("Adonis/Lucid/Orm");
class AvailableInterval extends Orm_1.BaseModel {
}
__decorate([
    Orm_1.column({ isPrimary: true }),
    __metadata("design:type", Number)
], AvailableInterval.prototype, "id", void 0);
__decorate([
    Orm_1.column(),
    __metadata("design:type", Number)
], AvailableInterval.prototype, "specialistId", void 0);
__decorate([
    Orm_1.column(),
    __metadata("design:type", typeof (_a = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _a : Object)
], AvailableInterval.prototype, "from", void 0);
__decorate([
    Orm_1.column(),
    __metadata("design:type", typeof (_b = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _b : Object)
], AvailableInterval.prototype, "to", void 0);
exports.default = AvailableInterval;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXZhaWxhYmxlSW50ZXJ2YWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJBdmFpbGFibGVJbnRlcnZhbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxpQ0FBZ0M7QUFDaEMsZ0VBQXlEO0FBRXpELE1BQXFCLGlCQUFrQixTQUFRLGVBQVM7Q0FZdkQ7QUFWRztJQURDLFlBQU0sQ0FBQyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQzs7NkNBQ1g7QUFHakI7SUFEQyxZQUFNLEVBQUU7O3VEQUNrQjtBQUczQjtJQURDLFlBQU0sRUFBRTtrREFDSSxnQkFBUSxvQkFBUixnQkFBUTsrQ0FBQTtBQUdyQjtJQURDLFlBQU0sRUFBRTtrREFDRSxnQkFBUSxvQkFBUixnQkFBUTs2Q0FBQTtBQVh2QixvQ0FZQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhdGVUaW1lIH0gZnJvbSAnbHV4b24nXHJcbmltcG9ydCB7IEJhc2VNb2RlbCwgY29sdW1uIH0gZnJvbSAnQGlvYzpBZG9uaXMvTHVjaWQvT3JtJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXZhaWxhYmxlSW50ZXJ2YWwgZXh0ZW5kcyBCYXNlTW9kZWwge1xyXG4gICAgQGNvbHVtbih7IGlzUHJpbWFyeTogdHJ1ZSB9KVxyXG4gICAgcHVibGljIGlkOiBudW1iZXJcclxuXHJcbiAgICBAY29sdW1uKClcclxuICAgIHB1YmxpYyBzcGVjaWFsaXN0SWQ6IG51bWJlclxyXG5cclxuICAgIEBjb2x1bW4oKVxyXG4gICAgcHVibGljIGZyb206IERhdGVUaW1lXHJcblxyXG4gICAgQGNvbHVtbigpXHJcbiAgICBwdWJsaWMgdG86IERhdGVUaW1lXHJcbn1cclxuIl19