{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const FetchUpcomingSessions = createAsyncThunk('fetch/upcoming-sessions', async (userId, thunkAPI) => {\n  const response = await axios.get(`/student/get-sessions/${userId}`);\n  return response.data;\n});\nconst UpcomingSessionsSlice = createSlice({\n  name: 'upcoming-sessions',\n  initialState: [],\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(FetchUpcomingSessions.pending, state => {\n      return [];\n    });\n    builder.addCase(FetchUpcomingSessions.fulfilled, (state, {\n      payload\n    }) => {\n      return payload.sessions;\n    });\n  }\n});\nexport default UpcomingSessionsSlice.reducer;","map":{"version":3,"sources":["D:/Psychiatrist Software Project/client/src/redux/UpcomingSessionsSlice/UpcomingSessionsSlice.js"],"names":["createSlice","createAsyncThunk","axios","FetchUpcomingSessions","userId","thunkAPI","response","get","data","UpcomingSessionsSlice","name","initialState","reducers","extraReducers","builder","addCase","pending","state","fulfilled","payload","sessions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,qBAAqB,GAAGF,gBAAgB,CACjD,yBADiD,EAEjD,OAAOG,MAAP,EAAeC,QAAf,KAA4B;AACxB,QAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,yBAAwBH,MAAO,EAA1C,CAAvB;AACA,SAAOE,QAAQ,CAACE,IAAhB;AACH,CALgD,CAA9C;AASP,MAAMC,qBAAqB,GAAGT,WAAW,CAAC;AACtCU,EAAAA,IAAI,EAAE,mBADgC;AAEtCC,EAAAA,YAAY,EAAE,EAFwB;AAGtCC,EAAAA,QAAQ,EAAE,EAH4B;AAItCC,EAAAA,aAAa,EAAEC,OAAO,IAAI;AACtBA,IAAAA,OAAO,CAACC,OAAR,CAAgBZ,qBAAqB,CAACa,OAAtC,EAA+CC,KAAK,IAAI;AACpD,aAAO,EAAP;AACH,KAFD;AAGAH,IAAAA,OAAO,CAACC,OAAR,CAAgBZ,qBAAqB,CAACe,SAAtC,EAAiD,CAACD,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AACrE,aAAOA,OAAO,CAACC,QAAf;AACH,KAFD;AAGH;AAXqC,CAAD,CAAzC;AAeA,eAAeX,qBAAqB,CAACY,OAArC","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const FetchUpcomingSessions = createAsyncThunk(\r\n    'fetch/upcoming-sessions',\r\n    async (userId, thunkAPI) => {\r\n        const response = await axios.get(`/student/get-sessions/${userId}`)\r\n        return response.data\r\n    }\r\n)\r\n\r\n\r\nconst UpcomingSessionsSlice = createSlice({\r\n    name: 'upcoming-sessions',\r\n    initialState: [],\r\n    reducers: {},\r\n    extraReducers: builder => {\r\n        builder.addCase(FetchUpcomingSessions.pending, state => {\r\n            return []\r\n        })\r\n        builder.addCase(FetchUpcomingSessions.fulfilled, (state, { payload }) => {\r\n            return payload.sessions\r\n        })\r\n    }\r\n})\r\n\r\n\r\nexport default UpcomingSessionsSlice.reducer\r\n"]},"metadata":{},"sourceType":"module"}