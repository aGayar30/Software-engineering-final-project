{"ast":null,"code":"var _jsxFileName = \"D:\\\\Psychiatrist Software Project\\\\client\\\\src\\\\pages\\\\StudentPages\\\\StudentBookSessionsPage\\\\StudentBookSessionsPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport NewSessionDoctorCard from '../../../components/NewSessionDoctorCard/NewSessionDoctorCard';\nimport NewSessionCardHeaders from '../../../components/NewSessionDoctorCard/NewSessionCardHeaders';\nimport DoctorsFilter from './DoctorsFilter';\nimport dayjs from 'dayjs';\nimport IsoWeek from 'dayjs/plugin/isoWeek';\nimport Styled from './StudentBookSessionsPage.styled';\nimport { FetchDoctors } from '../../../redux/DoctorsSlice/DoctorsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndayjs.extend(IsoWeek);\n\nconst StudentBookSessionsPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const doctors = useSelector(state => state.doctors);\n  const [selectedOption, setSelectionOption] = useState(null);\n  useEffect(() => {\n    dispatch(FetchDoctors());\n  }, []);\n\n  const renderDoctorsIntervals = () => {\n    return doctors.map(doctor => {\n      const availableDays = doctor.availableIntervals.map(interval => {\n        const date = dayjs(interval.from);\n        return date.format('ddd');\n      });\n      const resultDays = availableDays.join('/');\n      console.log({\n        option: selectedOption,\n        doctor: doctor.type,\n        flag: selectedOption === doctor.type\n      });\n\n      if (selectedOption === null || selectedOption.value === doctor.type) {\n        return /*#__PURE__*/_jsxDEV(NewSessionDoctorCard, {\n          user_id: doctor.user_id,\n          name: doctor.user.firstname + ' ' + doctor.user.lastname,\n          type: doctor.type,\n          available_days: resultDays\n        }, doctor.user_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Styled.Page, {\n    children: [/*#__PURE__*/_jsxDEV(DoctorsFilter, {\n      selectedOption: selectedOption,\n      setSelectionOption: setSelectionOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NewSessionCardHeaders, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Styled.SessionsContainer, {\n      children: renderDoctorsIntervals()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StudentBookSessionsPage, \"P9X5DSVvPejo01zW+xDX0LQxZCg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = StudentBookSessionsPage;\nexport default StudentBookSessionsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentBookSessionsPage\");","map":{"version":3,"sources":["D:/Psychiatrist Software Project/client/src/pages/StudentPages/StudentBookSessionsPage/StudentBookSessionsPage.js"],"names":["useEffect","useState","useDispatch","useSelector","NewSessionDoctorCard","NewSessionCardHeaders","DoctorsFilter","dayjs","IsoWeek","Styled","FetchDoctors","extend","StudentBookSessionsPage","dispatch","doctors","state","selectedOption","setSelectionOption","renderDoctorsIntervals","map","doctor","availableDays","availableIntervals","interval","date","from","format","resultDays","join","console","log","option","type","flag","value","user_id","user","firstname","lastname"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,oBAAP,MAAiC,+DAAjC;AACA,OAAOC,qBAAP,MAAkC,gEAAlC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,SAASC,YAAT,QAA6B,0CAA7B;;AAEAH,KAAK,CAACI,MAAN,CAAaH,OAAb;;AAEA,MAAMI,uBAAuB,GAAG,MAAM;AAAA;;AAClC,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,OAAO,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B;AACA,QAAM,CAACE,cAAD,EAAiBC,kBAAjB,IAAuChB,QAAQ,CAAC,IAAD,CAArD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,QAAQ,CAACH,YAAY,EAAb,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMQ,sBAAsB,GAAG,MAAM;AACjC,WAAOJ,OAAO,CAACK,GAAR,CAAYC,MAAM,IAAI;AACzB,YAAMC,aAAa,GAAGD,MAAM,CAACE,kBAAP,CAA0BH,GAA1B,CAA8BI,QAAQ,IAAI;AAC5D,cAAMC,IAAI,GAAGjB,KAAK,CAACgB,QAAQ,CAACE,IAAV,CAAlB;AACA,eAAOD,IAAI,CAACE,MAAL,CAAY,KAAZ,CAAP;AACH,OAHqB,CAAtB;AAIA,YAAMC,UAAU,GAAGN,aAAa,CAACO,IAAd,CAAmB,GAAnB,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACC,QAAAA,MAAM,EAAEf,cAAT;AAAyBI,QAAAA,MAAM,EAAEA,MAAM,CAACY,IAAxC;AAA8CC,QAAAA,IAAI,EAAEjB,cAAc,KAAKI,MAAM,CAACY;AAA9E,OAAZ;;AACA,UAAIhB,cAAc,KAAK,IAAnB,IAA2BA,cAAc,CAACkB,KAAf,KAAyBd,MAAM,CAACY,IAA/D,EAAqE;AACjE,4BACI,QAAC,oBAAD;AAEI,UAAA,OAAO,EAAEZ,MAAM,CAACe,OAFpB;AAGI,UAAA,IAAI,EAAEf,MAAM,CAACgB,IAAP,CAAYC,SAAZ,GAAwB,GAAxB,GAA8BjB,MAAM,CAACgB,IAAP,CAAYE,QAHpD;AAII,UAAA,IAAI,EAAElB,MAAM,CAACY,IAJjB;AAKI,UAAA,cAAc,EAAEL;AALpB,WACSP,MAAM,CAACe,OADhB;AAAA;AAAA;AAAA;AAAA,gBADJ;AASH;AACJ,KAlBM,CAAP;AAmBH,GApBD;;AAsBA,sBACI,QAAC,MAAD,CAAQ,IAAR;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,cAAc,EAAEnB,cAA/B;AAA+C,MAAA,kBAAkB,EAAEC;AAAnE;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,MAAD,CAAQ,iBAAR;AAAA,gBACKC,sBAAsB;AAD3B;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAxCD;;GAAMN,uB;UACeV,W,EACDC,W;;;KAFdS,uB;AA0CN,eAAeA,uBAAf","sourcesContent":["import {useEffect, useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport NewSessionDoctorCard from '../../../components/NewSessionDoctorCard/NewSessionDoctorCard'\r\nimport NewSessionCardHeaders from '../../../components/NewSessionDoctorCard/NewSessionCardHeaders'\r\nimport DoctorsFilter from './DoctorsFilter'\r\nimport dayjs from 'dayjs'\r\nimport IsoWeek from 'dayjs/plugin/isoWeek'\r\nimport Styled from './StudentBookSessionsPage.styled'\r\nimport { FetchDoctors } from '../../../redux/DoctorsSlice/DoctorsSlice'\r\n\r\ndayjs.extend(IsoWeek)\r\n\r\nconst StudentBookSessionsPage = () => {\r\n    const dispatch = useDispatch()\r\n    const doctors = useSelector(state => state.doctors)\r\n    const [selectedOption, setSelectionOption] = useState(null);\r\n\r\n    useEffect(() => {\r\n        dispatch(FetchDoctors())\r\n    }, [])\r\n\r\n    const renderDoctorsIntervals = () => {\r\n        return doctors.map(doctor => {\r\n            const availableDays = doctor.availableIntervals.map(interval => {\r\n                const date = dayjs(interval.from)\r\n                return date.format('ddd')\r\n            })\r\n            const resultDays = availableDays.join('/')\r\n            console.log({option: selectedOption, doctor: doctor.type, flag: selectedOption === doctor.type})\r\n            if (selectedOption === null || selectedOption.value === doctor.type) {\r\n                return (\r\n                    <NewSessionDoctorCard\r\n                        key={doctor.user_id}\r\n                        user_id={doctor.user_id}\r\n                        name={doctor.user.firstname + ' ' + doctor.user.lastname}\r\n                        type={doctor.type}\r\n                        available_days={resultDays}\r\n                    />\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Styled.Page>\r\n            <DoctorsFilter selectedOption={selectedOption} setSelectionOption={setSelectionOption} />\r\n            <NewSessionCardHeaders />\r\n            <Styled.SessionsContainer>\r\n                {renderDoctorsIntervals()}\r\n            </Styled.SessionsContainer>\r\n        </Styled.Page>\r\n    )\r\n}\r\n\r\nexport default StudentBookSessionsPage\r\n"]},"metadata":{},"sourceType":"module"}