{"ast":null,"code":"var _jsxFileName = \"D:\\\\Psychiatrist Software Project\\\\client\\\\src\\\\pages\\\\Dashboard\\\\NavigationButton.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport StyledPage from './Dashboard.styled';\nimport icons from \"../../components/Icons/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavigationButton = props => {\n  _s();\n\n  const {\n    buttonText,\n    icon,\n    showArrow,\n    customOnClick\n  } = props;\n  const [showSubButtons, setShowSubButtons] = useState(false);\n\n  const toggleSubButtons = () => setShowSubButtons(!showSubButtons);\n\n  const handleOnClick = () => {\n    if (showArrow) {\n      toggleSubButtons();\n    } else {\n      if (customOnClick) customOnClick();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StyledPage.NavigationButton, {\n      onClick: handleOnClick,\n      children: /*#__PURE__*/_jsxDEV(StyledPage.NavigationButtonContents, {\n        children: [icon, buttonText, showArrow && icons.ChevronDown]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), showSubButtons && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NavigationButton, \"6yWl61yo9WzT/2g3v1PM3MclwbA=\");\n\n_c = NavigationButton;\nexport default NavigationButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigationButton\");","map":{"version":3,"sources":["D:/Psychiatrist Software Project/client/src/pages/Dashboard/NavigationButton.js"],"names":["useState","StyledPage","icons","NavigationButton","props","buttonText","icon","showArrow","customOnClick","showSubButtons","setShowSubButtons","toggleSubButtons","handleOnClick","ChevronDown","children"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA,SAApB;AAA+BC,IAAAA;AAA/B,MAAiDJ,KAAvD;AACA,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,KAAD,CAApD;;AACA,QAAMW,gBAAgB,GAAG,MAAMD,iBAAiB,CAAC,CAACD,cAAF,CAAhD;;AAEA,QAAMG,aAAa,GAAG,MAAM;AACxB,QAAIL,SAAJ,EAAe;AACXI,MAAAA,gBAAgB;AACnB,KAFD,MAGK;AACD,UAAIH,aAAJ,EAAmBA,aAAa;AACnC;AACJ,GAPD;;AASA,sBACI;AAAA,4BACI,QAAC,UAAD,CAAY,gBAAZ;AAA6B,MAAA,OAAO,EAAEI,aAAtC;AAAA,6BACI,QAAC,UAAD,CAAY,wBAAZ;AAAA,mBACKN,IADL,EACWD,UADX,EACuBE,SAAS,IAAIL,KAAK,CAACW,WAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAMKJ,cAAc,iBACX;AAAA,gBACKL,KAAK,CAACU;AADX;AAAA;AAAA;AAAA;AAAA,YAPR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA5BD;;GAAMX,gB;;KAAAA,gB;AA8BN,eAAeA,gBAAf","sourcesContent":["import { useState } from 'react'\r\n\r\nimport StyledPage from './Dashboard.styled'\r\nimport icons from \"../../components/Icons/icons\";\r\n\r\nconst NavigationButton = (props) => {\r\n    const { buttonText, icon, showArrow, customOnClick } = props\r\n    const [showSubButtons, setShowSubButtons] = useState(false)\r\n    const toggleSubButtons = () => setShowSubButtons(!showSubButtons)\r\n\r\n    const handleOnClick = () => {\r\n        if (showArrow) {\r\n            toggleSubButtons()\r\n        }\r\n        else {\r\n            if (customOnClick) customOnClick()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <StyledPage.NavigationButton onClick={handleOnClick}>\r\n                <StyledPage.NavigationButtonContents>\r\n                    {icon}{buttonText}{showArrow && icons.ChevronDown}\r\n                </StyledPage.NavigationButtonContents>\r\n            </StyledPage.NavigationButton>\r\n            {showSubButtons && (\r\n                <div>\r\n                    {props.children}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavigationButton\r\n"]},"metadata":{},"sourceType":"module"}