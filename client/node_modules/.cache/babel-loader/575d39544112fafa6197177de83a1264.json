{"ast":null,"code":"var _jsxFileName = \"D:\\\\Psychiatrist Software Project\\\\client\\\\src\\\\pages\\\\StudentPages\\\\DoctorDetailsPage\\\\DoctorDetailsPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport StyledPage from './DoctorDetails.styled';\nimport DoctorIntervalCard from '../../../components/DoctorIntervalCard';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport qs from 'querystring';\nimport axios from \"axios\";\nimport dayjs from \"dayjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DoctorDetailsPage = () => {\n  _s();\n\n  var _doctor$user, _doctor$user2;\n\n  const history = useHistory();\n  const location = useLocation();\n  const [doctorIntervals, setDoctorIntervals] = useState([]);\n  const [doctor, setDoctor] = useState(null);\n  useEffect(() => {\n    async function f() {\n      const searchQuery = qs.parse(location.search.replace('?', ''));\n      const response = await axios.get(`/student/get-doctor-intervals/${searchQuery.doctorId}`);\n      const doctorResponse = await axios.get(`/student/get-doctor-details/${searchQuery.doctorId}`);\n      setDoctor(doctorResponse.data.doctor);\n      const intervals = response.data.intervals;\n      setDoctorIntervals(intervals);\n    }\n\n    f();\n  }, []);\n\n  const renderIntervals = () => {\n    return doctorIntervals.map(interval => {\n      const from = dayjs(interval.from);\n      const to = dayjs(interval.to);\n      return /*#__PURE__*/_jsxDEV(DoctorIntervalCard, {\n        date: from.format('DD-MM-YYYY'),\n        day: from.format('ddd'),\n        from: from.format('HH:mm A'),\n        to: to.format('HH:mm A'),\n        onClick: () => history.push('/session-booking')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledPage.Page, {\n    children: /*#__PURE__*/_jsxDEV(StyledPage.DetailsSection, {\n      children: [/*#__PURE__*/_jsxDEV(StyledPage.Name, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: doctor ? (doctor === null || doctor === void 0 ? void 0 : (_doctor$user = doctor.user) === null || _doctor$user === void 0 ? void 0 : _doctor$user.firstname) + ' ' + (doctor === null || doctor === void 0 ? void 0 : (_doctor$user2 = doctor.user) === null || _doctor$user2 === void 0 ? void 0 : _doctor$user2.lastname) : \"doctor's name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StyledPage.Type, {\n        children: doctor === null || doctor === void 0 ? void 0 : doctor.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StyledPage.IntervalsContainer, {\n        children: renderIntervals()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DoctorDetailsPage, \"FPq629EYmTYCObeuDTHxWAKg0tU=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = DoctorDetailsPage;\nexport default DoctorDetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoctorDetailsPage\");","map":{"version":3,"sources":["D:/Psychiatrist Software Project/client/src/pages/StudentPages/DoctorDetailsPage/DoctorDetailsPage.js"],"names":["useEffect","useState","StyledPage","DoctorIntervalCard","useHistory","useLocation","qs","axios","dayjs","DoctorDetailsPage","history","location","doctorIntervals","setDoctorIntervals","doctor","setDoctor","f","searchQuery","parse","search","replace","response","get","doctorId","doctorResponse","data","intervals","renderIntervals","map","interval","from","to","format","push","user","firstname","lastname","type"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react'\r\nimport StyledPage from './DoctorDetails.styled'\r\nimport DoctorIntervalCard from '../../../components/DoctorIntervalCard'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport qs from 'querystring'\r\nimport axios from \"axios\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst DoctorDetailsPage = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const [doctorIntervals, setDoctorIntervals] = useState([])\r\n    const [doctor, setDoctor] = useState(null)\r\n\r\n    useEffect(() => {\r\n        async function f() {\r\n            const searchQuery = qs.parse(location.search.replace('?', ''))\r\n            const response = await axios.get(`/student/get-doctor-intervals/${searchQuery.doctorId}`)\r\n            const doctorResponse = await axios.get(`/student/get-doctor-details/${searchQuery.doctorId}`)\r\n            setDoctor(doctorResponse.data.doctor)\r\n            const intervals = response.data.intervals\r\n            setDoctorIntervals(intervals)\r\n        }\r\n\r\n        f()\r\n    }, [])\r\n\r\n    const renderIntervals = () => {\r\n        return doctorIntervals.map(interval => {\r\n            const from = dayjs(interval.from)\r\n            const to = dayjs(interval.to)\r\n            return (\r\n                <DoctorIntervalCard\r\n                    date={from.format('DD-MM-YYYY')}\r\n                    day={from.format('ddd')}\r\n                    from={from.format('HH:mm A')}\r\n                    to={to.format('HH:mm A')}\r\n                    onClick={() => history.push('/session-booking')}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <StyledPage.Page>\r\n            <StyledPage.DetailsSection>\r\n                <StyledPage.Name>\r\n                    <p>{doctor? doctor?.user?.firstname + ' ' + doctor?.user?.lastname : \"doctor's name\"}</p>\r\n                </StyledPage.Name>\r\n                <StyledPage.Type>{doctor?.type}</StyledPage.Type>\r\n                <StyledPage.IntervalsContainer>\r\n                    {renderIntervals()}\r\n                    {/*<DoctorIntervalCard date=\"07-11-2021\" day=\"Sun\" from=\"05:00\" to=\"06:00\" />*/}\r\n                    {/*<DoctorIntervalCard date=\"07-11-2021\" day=\"Sun\" from=\"05:00\" to=\"06:00\" />*/}\r\n                    {/*<DoctorIntervalCard date=\"07-11-2021\" day=\"Sun\" from=\"05:00\" to=\"06:00\" />*/}\r\n                </StyledPage.IntervalsContainer>\r\n            </StyledPage.DetailsSection>\r\n        </StyledPage.Page>\r\n    )\r\n}\r\n\r\nexport default DoctorDetailsPage\r\n"]},"metadata":{},"sourceType":"module"}