{"ast":null,"code":"var _jsxFileName = \"D:\\\\Psychiatrist Software Project\\\\client\\\\src\\\\pages\\\\StudentPages\\\\BookSessionPage\\\\BookSessionPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Styled from './BookSessionPage.styled';\nimport dayjs from 'dayjs';\nimport Select from \"react-select\";\nimport IntervalPicker from '../../../components/IntervalPicker';\nimport ConfirmationSweetAlert from \"../../../utils/ConfirmationSweetAlert\";\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FetchUpcomingSessions } from \"../../../redux/UpcomingSessionsSlice/UpcomingSessionsSlice\";\nimport axios from \"axios\";\nimport qs from 'querystring';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: 'online-meeting',\n  label: 'Online meeting'\n}, {\n  value: 'face-to-face',\n  label: 'Face to face'\n}, {\n  value: 'chat',\n  label: 'Chat'\n}];\n\nconst BookSessionPage = () => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  const [meetingOption, setMeetingOption] = useState({\n    value: 'online-meeting',\n    label: 'Online meeting'\n  });\n  const searchQuery = qs.parse(location.search.replace('?', ''));\n\n  const onConfirm = async res => {\n    const formatTemplate = 'DD-MM-YYYY hh:mm a';\n    const from = dayjs(res[0]);\n    const to = dayjs(res[1]);\n    await ConfirmationSweetAlert({\n      title: `Add interval from ${from.format(formatTemplate)} to ${to.format(formatTemplate)}`,\n      onConfirm: async () => {\n        const response = await axios.post('/student/create-session', {\n          from: from.toISOString(),\n          to: to.toISOString(),\n          type: meetingOption.value,\n          specialistId: searchQuery.doctorId,\n          studentId: auth.profile.id\n        });\n        console.log({\n          response: response.data\n        });\n        dispatch(FetchUpcomingSessions(auth.profile.id));\n        history.push('/upcoming');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Styled.Page, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add Interval\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      defaultValue: {\n        value: 'online-meeting',\n        label: 'Online meeting'\n      },\n      onChange: setMeetingOption,\n      options: options,\n      placeholder: \"Meeting type...\",\n      isClearable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IntervalPicker, {\n      onConfirm: onConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookSessionPage, \"+0upCeqdKt/1c7Tx6T/JUN8eYwI=\", false, function () {\n  return [useHistory, useLocation, useDispatch, useSelector];\n});\n\n_c = BookSessionPage;\nexport default BookSessionPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookSessionPage\");","map":{"version":3,"sources":["D:/Psychiatrist Software Project/client/src/pages/StudentPages/BookSessionPage/BookSessionPage.js"],"names":["useState","Styled","dayjs","Select","IntervalPicker","ConfirmationSweetAlert","useHistory","useLocation","useSelector","useDispatch","FetchUpcomingSessions","axios","qs","options","value","label","BookSessionPage","history","location","dispatch","auth","state","meetingOption","setMeetingOption","searchQuery","parse","search","replace","onConfirm","res","formatTemplate","from","to","title","format","response","post","toISOString","type","specialistId","doctorId","studentId","profile","id","console","log","data","push"],"mappings":"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","sourcesContent":["import {useState} from 'react'\r\nimport Styled from './BookSessionPage.styled'\r\nimport dayjs from 'dayjs'\r\nimport Select from \"react-select\";\r\nimport IntervalPicker from '../../../components/IntervalPicker'\r\nimport ConfirmationSweetAlert from \"../../../utils/ConfirmationSweetAlert\";\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { FetchUpcomingSessions } from \"../../../redux/UpcomingSessionsSlice/UpcomingSessionsSlice\";\r\nimport axios from \"axios\";\r\nimport qs from 'querystring'\r\n\r\nconst options = [\r\n    {value: 'online-meeting', label: 'Online meeting'},\r\n    {value: 'face-to-face', label: 'Face to face'},\r\n    {value: 'chat', label: 'Chat'}\r\n]\r\n\r\nconst BookSessionPage = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n    const auth = useSelector(state => state.auth)\r\n    const [meetingOption, setMeetingOption] = useState({value: 'online-meeting', label: 'Online meeting'})\r\n    const searchQuery = qs.parse(location.search.replace('?', ''))\r\n\r\n    const onConfirm = async (res) => {\r\n        const formatTemplate = 'DD-MM-YYYY hh:mm a'\r\n        const from = dayjs(res[0])\r\n        const to = dayjs(res[1])\r\n        await ConfirmationSweetAlert({\r\n            title: `Add interval from ${from.format(formatTemplate)} to ${to.format(formatTemplate)}`,\r\n            onConfirm: async () => {\r\n                const response = await axios.post('/student/create-session', {\r\n                    from: from.toISOString(),\r\n                    to: to.toISOString(),\r\n                    type: meetingOption.value,\r\n                    specialistId: searchQuery.doctorId,\r\n                    studentId: auth.profile.id\r\n                })\r\n                console.log({ response: response.data })\r\n                dispatch(FetchUpcomingSessions(auth.profile.id))\r\n                history.push('/upcoming')\r\n            },\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Styled.Page>\r\n            <p>Add Interval</p>\r\n            <Select\r\n                defaultValue={{ value: 'online-meeting', label: 'Online meeting'}}\r\n                onChange={setMeetingOption}\r\n                options={options}\r\n                placeholder=\"Meeting type...\"\r\n                isClearable={true}\r\n            />\r\n            <IntervalPicker onConfirm={onConfirm}/>\r\n\r\n        </Styled.Page>\r\n    )\r\n}\r\n\r\nexport default BookSessionPage\r\n"]},"metadata":{},"sourceType":"module"}