{"ast":null,"code":"var _jsxFileName = \"D:\\\\Psychiatrist Software Project\\\\client\\\\src\\\\CustomRoutes\\\\PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  children,\n  ...rest\n}) => {\n  _s();\n\n  const auth = useSelector(state => state.auth);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: ({\n      location\n    }) => auth.token ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PrivateRoute, \"SvwR9yfdOSlAizXx+1ujAxpoAFQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["D:/Psychiatrist Software Project/client/src/CustomRoutes/PrivateRoute.js"],"names":["useSelector","Route","Redirect","PrivateRoute","children","rest","auth","state","location","token","pathname","from"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAAUC,KAAV,EAAiBC,QAAjB,QAAiC,kBAAjC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA2B;AAAA;;AAC5C,QAAMC,IAAI,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AAEA,sBACI,QAAC,KAAD,OACQD,IADR;AAEI,IAAA,MAAM,EAAE,CAAC;AAAEG,MAAAA;AAAF,KAAD,KACJF,IAAI,CAACG,KAAL,GACIL,QADJ,gBAGI,QAAC,QAAD;AACI,MAAA,EAAE,EAAE;AACAM,QAAAA,QAAQ,EAAE,QADV;AAEAH,QAAAA,KAAK,EAAE;AAAEI,UAAAA,IAAI,EAAEH;AAAR;AAFP;AADR;AAAA;AAAA;AAAA;AAAA;AANZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CApBD;;GAAML,Y;UACWH,W;;;KADXG,Y;AAsBN,eAAeA,YAAf","sourcesContent":["import { useSelector } from 'react-redux'\r\nimport {  Route, Redirect } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n    const auth = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                auth.token ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/login',\r\n                            state: { from: location },\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute\r\n"]},"metadata":{},"sourceType":"module"}