{"ast":null,"code":"var _jsxFileName = \"D:\\\\Psychiatrist Software Project\\\\client\\\\src\\\\components\\\\IntervalPicker\\\\IntervalPicker.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { RangePicker } from 'react-minimal-datetime-range';\nimport 'react-minimal-datetime-range/lib/react-minimal-datetime-range.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IntervalPicker = ({\n  onConfirm\n}) => {\n  _s();\n\n  const now = new Date();\n  const [hour, setHour] = useState('00');\n  const [minute, setMinute] = useState('00');\n  const [month, setMonth] = useState(String(now.getMonth() + 1).padStart(2, '0'));\n  const [day, setDay] = useState(String(now.getDate()).padStart(2, '0'));\n  const [year, setYear] = useState(String(now.getFullYear()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(RangePicker, {\n      locale: \"en-us\" // default is en-us\n      ,\n      show: false // default is false\n      ,\n      disabled: false // default is false\n      ,\n      allowPageClickToClose: true // default is true\n      ,\n      onConfirm: onConfirm,\n      onClose: () => console.log('onClose'),\n      onClear: () => console.log('onClear'),\n      style: {\n        width: '350px'\n      },\n      placeholder: ['Start Time', 'End Time'],\n      showOnlyTime: false // default is false, only select time\n      ////////////////////\n      // IMPORTANT DESC //\n      ////////////////////\n      ,\n      defaultDates: [year + '-' + month + '-' + day, year + '-' + month + '-' + day] // ['YYYY-MM-DD', 'YYYY-MM-DD']\n      // This is the value you chosen every time.\n      ,\n      defaultTimes: [hour + ':' + minute, hour + ':' + minute] // ['hh:mm', 'hh:mm']\n      // This is the value you chosen every time.\n      ,\n      initialDates: [year + '-' + month + '-' + day, year + '-' + month + '-' + day] // ['YYYY-MM-DD', 'YYYY-MM-DD']\n      // This is the initial dates.\n      // If provided, input will be reset to this value when the clear icon hits,\n      // otherwise input will be display placeholder\n      ,\n      initialTimes: [hour + ':' + minute, hour + ':' + minute] // ['hh:mm', 'hh:mm']\n      // This is the initial times.\n      // If provided, input will be reset to this value when the clear icon hits,\n      // otherwise input will be display placeholder\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(IntervalPicker, \"PkEdtgWCmGr88xwfh1AwvA3IZcg=\");\n\n_c = IntervalPicker;\nexport default IntervalPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"IntervalPicker\");","map":{"version":3,"sources":["D:/Psychiatrist Software Project/client/src/components/IntervalPicker/IntervalPicker.js"],"names":["useState","RangePicker","IntervalPicker","onConfirm","now","Date","hour","setHour","minute","setMinute","month","setMonth","String","getMonth","padStart","day","setDay","getDate","year","setYear","getFullYear","console","log","width"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAO,uEAAP;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AACtC,QAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACY,MAAM,CAACR,GAAG,CAACS,QAAJ,KAAiB,CAAlB,CAAN,CAA2BC,QAA3B,CAAoC,CAApC,EAAuC,GAAvC,CAAD,CAAlC;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBhB,QAAQ,CAACY,MAAM,CAACR,GAAG,CAACa,OAAJ,EAAD,CAAN,CAAsBH,QAAtB,CAA+B,CAA/B,EAAkC,GAAlC,CAAD,CAA9B;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAACY,MAAM,CAACR,GAAG,CAACgB,WAAJ,EAAD,CAAP,CAAhC;AAIA,sBACI;AAAA,2BACI,QAAC,WAAD;AACI,MAAA,MAAM,EAAC,OADX,CACmB;AADnB;AAEI,MAAA,IAAI,EAAE,KAFV,CAEiB;AAFjB;AAGI,MAAA,QAAQ,EAAE,KAHd,CAGqB;AAHrB;AAII,MAAA,qBAAqB,EAAE,IAJ3B,CAIiC;AAJjC;AAKI,MAAA,SAAS,EAAEjB,SALf;AAMI,MAAA,OAAO,EAAE,MAAMkB,OAAO,CAACC,GAAR,CAAY,SAAZ,CANnB;AAOI,MAAA,OAAO,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,SAAZ,CAPnB;AAQI,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OARX;AASI,MAAA,WAAW,EAAE,CAAC,YAAD,EAAe,UAAf,CATjB;AAUI,MAAA,YAAY,EAAE,KAVlB,CAUyB;AACrB;AACA;AACA;AAbJ;AAcI,MAAA,YAAY,EAAE,CAACL,IAAI,GAAG,GAAP,GAAaR,KAAb,GAAqB,GAArB,GAA2BK,GAA5B,EAAiCG,IAAI,GAAG,GAAP,GAAaR,KAAb,GAAqB,GAArB,GAA2BK,GAA5D,CAdlB,CAeI;AACA;AAhBJ;AAiBI,MAAA,YAAY,EAAE,CAACT,IAAI,GAAG,GAAP,GAAaE,MAAd,EAAsBF,IAAI,GAAG,GAAP,GAAaE,MAAnC,CAjBlB,CAkBI;AACA;AAnBJ;AAoBI,MAAA,YAAY,EAAE,CAACU,IAAI,GAAG,GAAP,GAAaR,KAAb,GAAqB,GAArB,GAA2BK,GAA5B,EAAiCG,IAAI,GAAG,GAAP,GAAaR,KAAb,GAAqB,GAArB,GAA2BK,GAA5D,CApBlB,CAqBI;AACA;AACA;AACA;AAxBJ;AAyBI,MAAA,YAAY,EAAE,CAACT,IAAI,GAAG,GAAP,GAAaE,MAAd,EAAsBF,IAAI,GAAG,GAAP,GAAaE,MAAnC,CAzBlB,CA0BI;AACA;AACA;AACA;;AA7BJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CA7CD;;GAAMN,c;;KAAAA,c;AA+CN,eAAeA,cAAf","sourcesContent":["import { useState } from 'react'\r\nimport { RangePicker } from 'react-minimal-datetime-range'\r\nimport 'react-minimal-datetime-range/lib/react-minimal-datetime-range.min.css'\r\n\r\nconst IntervalPicker = ({ onConfirm }) => {\r\n    const now = new Date()\r\n    const [hour, setHour] = useState('00')\r\n    const [minute, setMinute] = useState('00')\r\n    const [month, setMonth] = useState(String(now.getMonth() + 1).padStart(2, '0'))\r\n    const [day, setDay] = useState(String(now.getDate()).padStart(2, '0'))\r\n    const [year, setYear] = useState(String(now.getFullYear()))\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <RangePicker\r\n                locale=\"en-us\" // default is en-us\r\n                show={false} // default is false\r\n                disabled={false} // default is false\r\n                allowPageClickToClose={true} // default is true\r\n                onConfirm={onConfirm}\r\n                onClose={() => console.log('onClose')}\r\n                onClear={() => console.log('onClear')}\r\n                style={{ width: '350px' }}\r\n                placeholder={['Start Time', 'End Time']}\r\n                showOnlyTime={false} // default is false, only select time\r\n                ////////////////////\r\n                // IMPORTANT DESC //\r\n                ////////////////////\r\n                defaultDates={[year + '-' + month + '-' + day, year + '-' + month + '-' + day]}\r\n                // ['YYYY-MM-DD', 'YYYY-MM-DD']\r\n                // This is the value you chosen every time.\r\n                defaultTimes={[hour + ':' + minute, hour + ':' + minute]}\r\n                // ['hh:mm', 'hh:mm']\r\n                // This is the value you chosen every time.\r\n                initialDates={[year + '-' + month + '-' + day, year + '-' + month + '-' + day]}\r\n                // ['YYYY-MM-DD', 'YYYY-MM-DD']\r\n                // This is the initial dates.\r\n                // If provided, input will be reset to this value when the clear icon hits,\r\n                // otherwise input will be display placeholder\r\n                initialTimes={[hour + ':' + minute, hour + ':' + minute]}\r\n                // ['hh:mm', 'hh:mm']\r\n                // This is the initial times.\r\n                // If provided, input will be reset to this value when the clear icon hits,\r\n                // otherwise input will be display placeholder\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IntervalPicker\r\n"]},"metadata":{},"sourceType":"module"}